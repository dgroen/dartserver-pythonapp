[server]
hostname = "letsplaydarts.eu"
node_ip = "127.0.0.1"
base_path = "https://letsplaydarts.eu/auth"
proxy_context_path = "/auth"  # REMOVED: This breaks /carbon console redirects
#base_path/ = "https://$ref{server.hostname}:${carbon.management.port}"

# Proxy port configuration for reverse proxy (nginx)
# This tells WSO2 IS to use port 443 (standard HTTPS) in generated URLs
# instead of the internal port 9443
[transport.https.properties]
proxyPort = 443

[super_admin]
username = "admin"
password = "admin"  # pragma: allowlist secret
create_admin_account = true

[user_store]
type = "read_write_ldap_unique_id"
connection_url = "ldap://localhost:${Ports.EmbeddedLDAP.LDAPServerPort}"
connection_name = "uid=admin,ou=system"
connection_password = "admin"  # pragma: allowlist secret
base_dn = "dc=wso2,dc=org"      #refers the base dn on which the user and group search bases will be generated

[database.identity_db]
type = "h2"
url = "jdbc:h2:./repository/database/WSO2IDENTITY_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000"
username = "wso2carbon"
password = "wso2carbon"  # pragma: allowlist secret

[database.shared_db]
type = "h2"
url = "jdbc:h2:./repository/database/WSO2SHARED_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000"
username = "wso2carbon"
password = "wso2carbon"  # pragma: allowlist secret

[keystore.primary]
file_name = "wso2carbon.jks"
password = "wso2carbon"  # pragma: allowlist secret

[truststore]
file_name="client-truststore.jks"
password="wso2carbon"  # pragma: allowlist secret
type="JKS"

[account_recovery.endpoint.auth]
hash= "66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262"  # pragma: allowlist secret

[identity.auth_framework.endpoint]
app_password= "dashboard"  # pragma: allowlist secret

# OAuth configurations
[oauth]
prompt_consent = false

[oauth.endpoints]
oauth2_consent_page = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/oauth2_consent.do"
oauth2_error_page = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/oauth2_error.do"
oidc_consent_page = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/oauth2_consent.do"
oidc_logout_consent_page = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/oauth2_logout_consent.do"
oidc_logout_page = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/oauth2_logout.do"

# Authentication endpoint configurations
# Use absolute URLs with /auth prefix to work with nginx reverse proxy
[authentication.endpoints]
login_url = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/login.do"
retry_url = "${carbon.protocol}://letsplaydarts.eu/auth/authenticationendpoint/retry.do"

# The KeyStore which is used for encrypting/decrypting internal data. By default the primary keystore is used as the internal keystore.

#[keystore.internal]
#file_name = "$ref{keystore.primary.file_name}"
#type = "$ref{keystore.primary.type}"
#password = "$ref{keystore.primary.password}"
#alias = "$ref{keystore.primary.alias}"
#key_password = "$ref{keystore.primary.key_password}"

# The KeyStore which is used for tls communication. By default the primary keystore is used as the tls keystore.

#[keystore.tls]
#file_name = "$ref{keystore.primary.file_name}"
#type = "$ref{keystore.primary.type}"
#password = "$ref{keystore.primary.password}"
#alias = "$ref{keystore.primary.alias}"
#key_password = "$ref{keystore.primary.key_password}"

#Google reCAPTCHA settings.

#[recaptcha]
#enabled = "true"
#api_url = "https://www.google.com/recaptcha/api.js"
#verify_url = "https://www.google.com/recaptcha/api/siteverify"
#site_key = ""
#secret_key = ""

# SMTP email sender settings.
#[output_adapter.email]
#from_address= "abcd@gmail.com"
#username= "abcd"
#password= "xxxx"
#hostname= "smtp.gmail.com"
#port= 587
