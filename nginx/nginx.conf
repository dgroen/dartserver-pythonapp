events {
    worker_connections 1024;
}

http {
    upstream api_gateway {
        server api-gateway:8080;
    }

    upstream darts_app {
        server darts-app:5000;
    }

    upstream wso2_apim {
        server wso2apim:9443;
    }

    upstream wso2_is {
        server wso2is:9443;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS Server
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL Configuration (use your own certificates in production)
        ssl_certificate /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # API Gateway Routes
        location /api/v1/ {
            limit_req zone=api_limit burst=20 nodelay;

            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # WSO2 IS Authentication Endpoints (without /auth prefix)
        location /authenticationendpoint/ {
            proxy_pass https://wso2_is/authenticationendpoint/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        location /commonauth {
            proxy_pass https://wso2_is/commonauth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        location /logincontext {
            proxy_pass https://wso2_is/logincontext;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # Proxy /console to WSO2 IS (handles both GET and POST for OAuth callback)
        location /console {
            proxy_pass https://wso2_is/console;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # OAuth2 endpoints for console
        location /oauth2/ {
            proxy_pass https://wso2_is/oauth2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # OIDC endpoints for console
        location /oidc/ {
            proxy_pass https://wso2_is/oidc/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # SCIM2 endpoints for user management
        location /scim2/ {
            proxy_pass https://wso2_is/scim2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # API server endpoints for console configuration
        location /api/server/ {
            proxy_pass https://wso2_is/api/server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $host;
            proxy_ssl_verify off;
        }

        # Redirect /t/ to /auth/t/
        location /t/ {
            return 301 https://$host/auth$request_uri;
        }

        # Darts Application Routes
        location / {
            proxy_pass http://darts_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Force HTTPS for OAuth redirects
            proxy_set_header X-Forwarded-Host $host;   # Pass the external host for dynamic redirects

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # WSO2 API Manager Routes
        location /apim/ {
            proxy_pass https://wso2_apim/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
        }

        location = /carbon/admin/index.jsp {
            return 301 https://$host/auth/carbon/admin/index.jsp;
        }

        location /carbon/ {
            return 301 https://$host/auth$request_uri;
        }

        # WSO2 Identity Server Routes
        location /auth/ {
            limit_req zone=auth_limit burst=5 nodelay;

            proxy_pass https://wso2_is/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Force HTTPS for OAuth redirects
            proxy_set_header X-Forwarded-Host $host;   # Pass the external host
            proxy_ssl_verify off;
            proxy_redirect ~^/(.*)$ /auth/$1;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
